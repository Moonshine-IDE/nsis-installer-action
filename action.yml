name: 'Create NSIS Installer'
description: 'Creates an NSIS Installer from the binaries and the resources'

inputs:
  product_name:
    description: 'Name of the application'
    required: true
  product_version:
    description: 'Version of the application'
    required: true
  product_publisher:
    description: 'Publisher of the application'
    required: true
  product_website:
    description: 'Website of the application'
    required: true
  product_exe:
    description: 'Executable of the application'
    required: true
  bin_path:
    description: 'Path to the binaries of the application'
    required: true
  license_path:
    description: 'Path to the license of the application'
    required: true
  output_path:
    description: 'Path to the resulting installer'
    required: true


runs:
  using: 'composite'
  steps:

  - name: 'Checkout'
    uses: actions/checkout@v3
    with: 
      path: ./nsis-installer-action-repo

  - name: Install NSIS plugin nsProcess
    shell: powershell
    run: |
      Invoke-RestMethod -Uri "https://nsis.sourceforge.io/mediawiki/images/1/18/NsProcess.zip" -OutFile NsProcess.7z
      7z x NsProcess.7z -o'NsProcess'
      mv NsProcess\Plugin\nsProcessW.dll "C:\Program Files (x86)\NSIS\Plugins\x86-unicode\nsProcess.dll"
      mv NSProcess\Include\nsProcess.nsh "C:\Program Files (x86)\NSIS\Include\nsProcess.nsh"

  - name: Debug nsProcess
    shell: powershell
    run: ls "C:\Program Files (x86)\NSIS\Include"

  - name: Debug
    shell: powershell
    run: |
      pwd
      tree /F "${{ inputs.bin_path }}"

  - name: Convert vars
    shell: powershell
    run: |
      $binPathAbsolute = Resolve-Path ${{ inputs.bin_path }}
      echo "Absolute path: $binPathAbsolute"
      echo "binPathAbsolute=$binPathAbsolute" | Out-File -Append $env:GITHUB_ENV      
      $installerName = Split-Path ${{ inputs.output_path }} -leaf
      echo "Installer name: $installerName"
      echo "installerName=$installerName" | Out-File -Append $env:GITHUB_ENV

  - name: 'Create NSIS Installer'
    shell: powershell
    run: |
      makensis `
        /DPRODUCT_NAME="${{ inputs.product_name }}" `
        /DPRODUCT_VERSION=${{ inputs.product_version }} `
        /DPRODUCT_PUBLISHER="${{ inputs.product_publisher }}" `
        /DPRODUCT_WEB_SITE="${{ inputs.product_website }}" `
        /DBIN_PATH="${{ env.binPathAbsolute }}\*.*" `
        /DPRODUCT_EXE="${{ inputs.product_exe }}" `
        /DPRODUCT_INSTALLER="${{ env.installerName }}" `
        /DLICENSE_FILE=${{ inputs.license_path }} `
        /DROOT_KEY=HKCU `
        ./nsis-installer-action-repo/installer.nsi

  - name: Relocate installer
    shell: powershell
    env: 
      INSTALLER_NAME: Split-Path ${{ inputs.output_path }} -leaf
    run: |
      mv ./nsis-installer-action-repo/${{ env.installerName }} ${{ inputs.output_path }}
