; Script generated by the HM NIS Edit Script Wizard.

; Script inputs
; ${PRODUCT_NAME}
; ${PRODUCT_VERSION}
; ${PRODUCT_PUBLISHER}
; ${PRODUCT_WEB_SITE}
; ${BIN_PATH}
; ${PRODUCT_EXE}
; ${PRODUCT_INSTALLER}
; ${LICENSE_FILE}
; ${ROOT_KEY}

; Include nsProcess plugin
!include "nsProcess.nsh"

; Include VersionCompare
!include "WordFunc.nsh"

; HM NIS Edit Wizard helper defines
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\${PRODUCT_EXE}"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"

; MUI 1.67 compatible ------
!include "MUI.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"

; Welcome page
!define MUI_WELCOMEPAGE_TITLE_3LINES
!insertmacro MUI_PAGE_WELCOME
; License page
;!insertmacro MUI_PAGE_LICENSE "${LICENSE_FILE}"
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!define MUI_FINISHPAGE_RUN "$INSTDIR\${PRODUCT_EXE}"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "${PRODUCT_INSTALLER}"
InstallDir "$PROGRAMFILES\${PRODUCT_NAME}"
InstallDirRegKey ${ROOT_KEY} "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show

Function handleUpgradeDowngradeReinstall
  ReadRegStr $R0 ${ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion"
  ${VersionCompare} $R0 ${PRODUCT_VERSION} $R1
  IntCmp $R1 0 reinstall
  IntCmp $R1 1 downgrade
  IntCmp $R1 2 upgrade

  reinstall:
    MessageBox MB_YESNO|MB_ICONQUESTION \
    "The same version (${PRODUCT_VERSION}) of ${PRODUCT_NAME} is already installed.$\n$\nDo you want to reinstall it?" \
    IDYES install IDNO abort

  downgrade:
    MessageBox MB_YESNO "Newer version ($R0) of ${PRODUCT_NAME} is already installed.$\n$\nDo you want to downgrade?" \
    IDYES install IDNO abort

  upgrade:
    Goto install

  install:
    Return

  abort:
    Abort

FunctionEnd

Function handleRunningApplication
  loop:
    ${nsProcess::FindProcess} "${PRODUCT_EXE}" $R0
    IntCmp $R0 0 appIsRunning appIsNotRunning appIsNotRunning  

  appIsRunning:
    MessageBox MB_YESNOCANCEL|MB_ICONQUESTION \
    "Application ${PRODUCT_EXE} is already running. Do you want to kill it?$\n$\n\
    Yes - kill the application$\n\
    No - check again$\n\
    Cancel - abort the installation"\
    IDYES killApp IDNO retry
    ; user pressed cancel or there was an error
    Abort

  killApp:
    ${nsProcess::KillProcess} "${PRODUCT_EXE}" $R0
    IntCmp $R0 0 appIsNotRunning errorKilling errorKilling

  errorKilling:
    MessageBox MB_OK|MB_ICONSTOP "Error killing the application. Installation aborted."
    Abort

  retry:
    Goto loop

  appIsNotRunning:
    Return

FunctionEnd


Function .onInit
  Call handleUpgradeDowngradeReinstall
  Call handleRunningApplication
FunctionEnd

Section "MainSection" SEC01
  SetOutPath "$INSTDIR"
  SetOverwrite ifnewer
  File /r "${BIN_PATH}"
  CreateDirectory "$SMPROGRAMS\${PRODUCT_NAME}"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\${PRODUCT_NAME}.lnk" "$INSTDIR\${PRODUCT_EXE}"
  CreateShortCut "$DESKTOP\${PRODUCT_NAME}.lnk" "$INSTDIR\${PRODUCT_EXE}"
SectionEnd

Section -AdditionalIcons
  WriteIniStr "$INSTDIR\${PRODUCT_NAME}.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Website.lnk" "$INSTDIR\${PRODUCT_NAME}.url"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk" "$INSTDIR\uninst.exe"
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr ${ROOT_KEY} "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\${PRODUCT_EXE}"
  WriteRegStr ${ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\${PRODUCT_EXE}"
  WriteRegStr ${ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd


Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name) and all of its components?" IDYES +2
  Abort
FunctionEnd

Section Uninstall
  Delete "$INSTDIR\${PRODUCT_NAME}.url"
  Delete "$INSTDIR\uninst.exe"
  Delete "$INSTDIR\${PRODUCT_EXE}"

  Delete "$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk"
  Delete "$SMPROGRAMS\${PRODUCT_NAME}\Website.lnk"
  Delete "$DESKTOP\${PRODUCT_NAME}.lnk"
  Delete "$SMPROGRAMS\${PRODUCT_NAME}\${PRODUCT_NAME}.lnk"

  RMDir "$SMPROGRAMS\${PRODUCT_NAME}"
  RMDir /r "$INSTDIR"

  DeleteRegKey ${ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey ${ROOT_KEY} "${PRODUCT_DIR_REGKEY}"
  SetAutoClose true
SectionEnd